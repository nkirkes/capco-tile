@using Recaptcha.Web.Mvc
@model CAPCO.Models.RegisterModel

@{
    ViewBag.Title = "Register";
    var why = ViewBag.WhyRegisterSection as CAPCO.Infrastructure.Domain.ContentSection;
}

<div class="span-12">
    
    <div style="padding: 10px;">
        @Html.GetSectionHtml(why)
        <h3>Instructions:</h3>
        <ul>
            <li>Review our @Html.ActionLink("privacy policy", "privacy", "home", new { area = "" }, null).</li>
            <li>Use the form to the right to create a new account. </li>
            <li>Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.</li>
        </ul>
    </div>
</div>

<div class="span-12 last">
    <div style="padding: 10px;">
    @if (!Request.IsAuthenticated)
    {
        <h2>Register</h2>
    
        <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

        using (Html.BeginForm("register", "account", FormMethod.Post))
        {
            @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
            @Html.HiddenFor(x => x.InvitationKey);
            <div>
                <div>
                    @Html.LabelFor(m => m.UserName, new { @class = "fieldpair", style="min-width: 120px;" })
                    @Html.TextBoxFor(m => m.UserName)
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>

                <div>
                    @Html.LabelFor(m => m.Email, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.TextBoxFor(m => m.Email)
                    @Html.ValidationMessageFor(m => m.Email)
                </div>

                <div class="labelpair">
                    @Html.LabelFor(m => m.FirstName, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.TextBoxFor(m => m.FirstName)
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>

                <div>
                    @Html.LabelFor(m => m.LastName, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.TextBoxFor(m => m.LastName)
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            
                <div>
                    @Html.LabelFor(m => m.CompanyName, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.TextBoxFor(m => m.CompanyName)
                    @Html.ValidationMessageFor(m => m.CompanyName)
                </div>

                <div>
                    @Html.Label("I am a", new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.DropDownListFor(x => x.AccountType, default(CAPCO.Infrastructure.Domain.AccountTypes).ToSelectList(), "Select...")
                    @Html.ValidationMessageFor(m => m.AccountType)
                </div>

                <div>
                    @Html.Label("Account Number", new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.TextBoxFor(m => m.AccountNumber)
                    @Html.ValidationMessageFor(m => m.AccountNumber)
                </div>

                <div>
                    @Html.LabelFor(m => m.Password, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.PasswordFor(m => m.Password)
                    @Html.ValidationMessageFor(m => m.Password)
                </div>

                <div>
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "fieldpair", style = "min-width: 120px;" })
                    @Html.PasswordFor(m => m.ConfirmPassword)
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
                
                <div>
                    @Html.Recaptcha(theme:Recaptcha.Web.RecaptchaTheme.Clean)
                </div>
                

                <p class="buttons">
                    <input type="submit" value="Register" />
                
                </p>
            </div>
        }
        <h1>Already have an acccount?</h1>
        <div>
            @Html.Partial("_LogOnOnly")
        </div>
        
    }
    else
    { 
        @Html.Partial("_LogOnOrRegister")
    }
    </div>
</div>


